variables:
  backendImageName: quay.io/anonlink-test #data61/anonlink-app
  frontendImageName: data61/anonlink-nginx
  docsImageName: quay.io/anonlink-test #data61/anonlink-entity-service-docs
  tutorialImageName: quay.io/anonlink-test #data61/anonlink-entity-service-tutorial
  benchmarkingImageName: quay.io/anonlink-test #data61/anonlink-benchmarking

trigger:
- feature-azure-pipeline


stages:
- stage: stage_docker_image_build
  displayName: Build docker images
  dependsOn: []
  jobs:
#  - template: .azurePipeline/templateDockerBuildPush.yml
#    parameters:
#      folder: './frontend'
#      imageName: data61/anonlink-nginx
#      jobName: 'anonlink_nginx'
#  - template: .azurePipeline/templateDockerBuildPush.yml
#    parameters:
#      folder: './backend'
#      imageName: data61/anonlink-app
#      jobName: 'anonlink_app'
  - job:
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        echo "Done Building Images."
      
- stage: stage_benchmark_image_build
  displayName: Build benchmark images
  dependsOn: []
  jobs:
#  - template: .azurePipeline/templateDockerBuildPush.yml
#    parameters:
#      folder: './benchmarking'
#      imageName: data61/anonlink-benchmark
#      jobName: 'anonlink_benchmark'
  - job:
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        echo "Done Building Images."

- stage: stage_integration_tests
  displayName: Integration tests
  dependsOn: [stage_docker_image_build]
  jobs:
  - job: integration_test
    timeoutInMinutes: 10
    variables:
     commandPrefix: docker-compose -f tools/docker-compose.yml -f tools/ci.yml --project-directory . 
    displayName: Integration tests
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        sourceBranch="$(Build.SourceBranch)"; echo ${sourceBranch##*/} | tr [:upper:] [:lower:] | tr -cd [a-z] | xargs -I@ echo "##vso[task.setvariable variable=dockertag]@"
    - script: |
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) up db_init > /dev/null 2>&1
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) up --abort-on-container-exit --exit-code-from tests db minio redis backend worker nginx tests
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) down -v
      env:
        TAG: $(dockertag)

- stage: benchmark
  displayName: benchmark
  dependsOn: 
  - stage_docker_image_build
  - stage_benchmark_image_build
  jobs:
  - job: benchmark
    timeoutInMinutes: 15
    variables:
      commandPrefix: docker-compose -f tools/docker-compose.yml -f tools/ci.yml --project-directory .
    steps:
    - script: |
        sourceBranch="$(Build.SourceBranch)"; echo ${sourceBranch##*/} | tr [:upper:] [:lower:] | tr -cd [a-z] | xargs -I@ echo "##vso[task.setvariable variable=dockertag]@"
    - script: |
        ./tools/create-benchmark-cache.sh
        echo "Copying experiments into cache volume"
        docker run --rm -v `pwd`:/src \
              -v linkage-benchmark-data:/data busybox \
              sh -c "cp -r /src/benchmarking/linkage-bench-cache-experiments.json /data; chown -R 1000:1000 /data"
    - script: |
        echo "Starting benchmarks"
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) up db_init > /dev/null 2>&1
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) up --abort-on-container-exit --exit-code-from benchmark db minio redis backend worker nginx benchmark
        $(commandPrefix) -p es$(dockertag)$(Build.BuildNumber) down -v
      env:
        TAG: $(dockertag)
